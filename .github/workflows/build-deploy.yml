name: Build

on:
  push:
    branches:
      - main

env:
  AWS_REGION : "ap-south-1"
permissions:
  id-token: write
  contents: read

jobs:
  OIDC:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::628425575853:role/role-github-actions
          aws-region: ${{ env.AWS_REGION}}



  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - name: NPM Instal
        run: npm install # Add your specific npm install command

      - name: Docker build and push
        run: |
          # Run commands to build and push Docker images
          docker build -t tic-tac-toe .
          docker tag tic-tac-toe 8956366123/tic-tac-toe:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push 8956366123/tic-tac-toe:latest
        env:
          DOCKER_CLI_ACI: 1



  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Pull the Docker imagee
        run: docker pull 8956366123/tic-tac-toe:latest

      - name: Run the container
        run: docker run -d --name ticccgame -p 3000:3000 8956366123/tic-tac-toe:latest




     

